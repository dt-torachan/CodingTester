version: '3'
services:
 # laravelを動かすコンテナ
 app:
  #  ports:
  #    - "80:80"
   build: ./docker/app
   container_name: app
   # コンテナとホスト側のディレクトリを同期する場所の指定。laravelのソースが入る予定の場所
   volumes:
     - ./src/codingtester:/var/www/html
 # MySQLを動かすコンテナ
 db:
   image: mysql:5.7
   container_name: db
   environment:
     MYSQL_ROOT_PASSWORD: root
     MYSQL_DATABASE: laravel_db
    #  MYSQL_USER: laravel_user
    #  MYSQL_PASSWORD: laravel_pass
     TZ: 'Asia/Tokyo'
   # 起動時のコマンド
   command: mysqld --character-set-server=utf8mb4 --collation-server=utf8mb4_unicode_ci
   volumes:
     - ./docker/db/data:/var/lib/mysql
     - ./docker/db/my.cnf:/etc/mysql/conf.d/my.cnf
   ports:
     - 3306:3306
 api:
  build: ./docker/api/app
  stdin_open: true
  # ports:
  #    - "81:80"
  container_name: api
  volumes:
     - ./src/codechecker:/var/www/html
 smtp:
    image: schickling/mailcatcher
    ports:
      - "1080:1080"
      - "1025:1025"

 phpmyadmin:
    image: phpmyadmin/phpmyadmin
    environment:
      - PMA_HOST=db
    links:
      - db
    ports:
      - 8008:80
    volumes:
      - docker/no/phpmyadmin/sessions:/sessions

 nginx-proxy:
    image: jwilder/nginx-proxy
    labels:
      - com.github.jrcs.letsencrypt_nginx_proxy_companion.nginx_proxy=jwilder/nginx-proxy
    privileged: true
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./docker/nginx/certs:/etc/nginx/certs:ro
      - ./docker/nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./docker/nginx/conf.d/sites.d/:/etc/nginx/conf.d/sites.d
      - proxy:/etc/nginx/vhost.d
      - proxy:/usr/share/nginx/html
      - /var/run/docker.sock:/tmp/docker.sock:ro
    restart: always
    networks:
      default:
        aliases:
          - codingtester.local.jp
          - api.codingtester.local.jp

 letsencrypt-nginx:
    image: jrcs/letsencrypt-nginx-proxy-companion
    container_name: letsencrypt-nginx
    privileged: true
    volumes:
      - ./docker/nginx/certs:/etc/nginx/certs
      - /var/run/docker.sock:/var/run/docker.sock:ro
    depends_on:
      - nginx-proxy
    volumes_from:
      - nginx-proxy
    restart: always

volumes:
  proxy: